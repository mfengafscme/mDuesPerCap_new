<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: jbossmq-service.xml,v 1.10.2.9 2003/04/24 12:51:10 ejort Exp $ -->

<server>

  <!-- ==================================================================== -->
  <!-- JBossMQ                                                              -->
  <!-- ==================================================================== -->


  <!-- ==================================================================== -->
  <!-- Invocation Layers                                                    -->
  <!-- ==================================================================== -->
  <!--
     | InvocationLayers are the different transport methods that can
     | be used to access the server.
   -->

  <mbean code="org.jboss.mq.il.jvm.JVMServerILService"
	 name="jboss.mq:service=InvocationLayer,type=JVM">
    <depends optional-attribute-name="Invoker">jboss.mq:service=Invoker</depends>
    <attribute name="ConnectionFactoryJNDIRef">java:/ConnectionFactory</attribute>
    <attribute name="XAConnectionFactoryJNDIRef">java:/XAConnectionFactory</attribute>
    <attribute name="PingPeriod">0</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- JBossMQ Interceptor chain configuration                              -->
  <!-- ==================================================================== -->
  <!-- To tune performance, you can have the Invoker skip over the TracingInterceptor -->
  <!-- and/or the SecurityManager, but then you loose the ability to trace and/or enforce security. -->
  <mbean code="org.jboss.mq.server.jmx.Invoker" name="jboss.mq:service=Invoker">
	  <depends optional-attribute-name="NextInterceptor">jboss.mq:service=DestinationManager</depends>
  </mbean>

  <mbean code="org.jboss.mq.server.jmx.DestinationManager" name="jboss.mq:service=DestinationManager">
    <depends optional-attribute-name="PersistenceManager">jboss.mq:service=PersistenceManager</depends>
    <depends optional-attribute-name="StateManager">jboss.mq:service=StateManager</depends>
  </mbean>

  <mbean code="org.jboss.mq.security.SecurityManager" name="jboss.mq:service=SecurityManager">
    <depends optional-attribute-name="NextInterceptor">jboss.mq:service=DestinationManager</depends>
  </mbean>

  <!--
     | The MessageCache decides where to put JBossMQ message that
     | are sitting around waiting to be consumed by a client.
     |
     | The memory marks are in Megabytes.  Once the JVM memory usage hits
     | the high memory mark, the old messages in the cache will start getting
     | stored in the DataDirectory.  As memory usage gets closer to the
     | Max memory mark, the amount of message kept in the memory cache aproaches 0.
     |
     | ATTENTION: When the "file" or "rollinglogged" Persistence Manager is used
     | you have to set the "CacheStore" to the CacheStore (the commented out line)
     | and not to the PM itself.
   -->
  <mbean code="org.jboss.mq.server.MessageCache"
	 name="jboss.mq:service=MessageCache">
    <attribute name="HighMemoryMark">500</attribute>
    <attribute name="MaxMemoryMark">600</attribute>
	<depends optional-attribute-name="CacheStore">jboss.mq:service=CacheStore</depends>
	<attribute name="CacheStore">jboss.mq:service=CacheStore</attribute>
  </mbean>

  <!--
     | The CacheStore decides where to store JBossMQ message that
     | that the MessageCache has decided to move in secondary storage.
     |
     | Now you can specify a absolut path by using an ULR like:
     | file:///c:/temp
     | ATTENTION: the directory MUST exists because it will not be
     | created.
   -->
  <mbean code="org.jboss.mq.pm.file.CacheStore"
	 name="jboss.mq:service=CacheStore">
    <attribute name="DataDirectory">tmp/jbossmq</attribute>
  </mbean>

  <!--
     | The StateManager is used to keep JMS persistent state data.
     | For example: what durable subscriptions are active.
   -->
  <mbean code="org.jboss.mq.sm.file.DynamicStateManager"
	 name="jboss.mq:service=StateManager">
    <!-- This file is pulled from the configuration URL of the server -->
    <attribute name="StateFile">jbossmq-state.xml</attribute>
  </mbean>

  <!--
     | The PersistenceManager is used to store messages to disk.
     |
     | Now you can specify a absolut path by using an ULR like:
     | file:///c:/temp
     | ATTENTION: the directory MUST exists because it will not be
     | created. Also for the "file" Persistance Manager the directory
     | MUST be empty otherwise the startup fails ("rollinglogged" works
     | fine.
   -->
  <mbean code="org.jboss.mq.pm.file.PersistenceManager"
	 name="jboss.mq:service=PersistenceManager">
    <attribute name="DataDirectory">data/jbossmq/file</attribute>
    <depends optional-attribute-name="MessageCache">jboss.mq:service=MessageCache</depends>
  </mbean>

  <!-- ==================================================================== -->
  <!-- System Destinations                                                  -->
  <!-- ==================================================================== -->

  <!-- Dead Letter Queue -->
  <mbean code="org.jboss.mq.server.jmx.Queue"
	 name="jboss.mq.destination:service=Queue,name=DLQ">
    <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
	<depends optional-attribute-name="SecurityManager">jboss.mq:service=SecurityManager</depends>
  </mbean>

</server>
